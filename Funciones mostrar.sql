/*
Autor: Javier Rivas
Fecha: 28/05/14
*/
DROP PROCEDURE IF EXISTS GETCLASE_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETCLASE_X_NOMBRE(PCLASE VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT CLASE_ID INTO V_ID FROM CLASE
    WHERE NOMBRE = PCLASE;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETORDEN_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETORDEN_X_NOMBRE(PORDEN VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT ORDEN_ID INTO V_ID FROM ORDEN
    WHERE NOMBRE = PORDEN;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETSUBORDEN_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETSUBORDEN_X_NOMBRE(PSUBORDEN VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT SUBORDEN_ID INTO V_ID FROM SUBORDEN
    WHERE NOMBRE = PSUBORDEN;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETFAMILIA_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETFAMILIA_X_NOMBRE(PFAMILIA VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT FAMILIA_ID INTO V_ID FROM FAMILIA
    WHERE NOMBRE = PFAMILIA;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETGENERO_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETGENERO_X_NOMBRE(PGENERO VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT GENERO_ID INTO V_ID FROM GENERO
    WHERE NOMBRE = PGENERO;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETESPECIE_X_NOMBRE;
DELIMITER $$
CREATE FUNCTION GETESPECIE_X_NOMBRE(PESPECIE VARCHAR(50))
RETURNS INT
BEGIN
	DECLARE V_ID INT;
	SELECT ESPECIE_ID INTO V_ID FROM ESPECIE
    WHERE NOMBRE = PESPECIE;
    RETURN V_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETCLASES;
DELIMITER $$
CREATE PROCEDURE GETCLASES()
BEGIN
	SELECT NOMBRE FROM CLASE;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETORDENES;
DELIMITER $$
CREATE PROCEDURE GETORDENES(PCLASE VARCHAR(50))
BEGIN
	SELECT NOMBRE FROM ORDEN WHERE CLASE_ID = GETCLASE_X_NOMBRE(PCLASE);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETSUBORDENES;
DELIMITER $$
CREATE PROCEDURE GETSUBORDENES(PORDEN VARCHAR(50))
BEGIN
	SELECT NOMBRE FROM SUBORDEN WHERE ORDEN_ID = GETORDEN_X_NOMBRE(PORDEN);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETFAMILIAS;
DELIMITER $$
CREATE PROCEDURE GETFAMILIAS(PSUBORDEN VARCHAR(50))
BEGIN
	SELECT NOMBRE FROM FAMILIA WHERE SUBORDEN_ID = GETSUBORDEN_X_NOMBRE(PSUBORDEN);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETGENEROS;
DELIMITER $$
CREATE PROCEDURE GETGENEROS(PFAMILIA VARCHAR(50))
BEGIN
	SELECT NOMBRE FROM GENERO WHERE FAMILIA_ID = GETFAMILIA_X_NOMBRE(PFAMILIA);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETESPECIES;
DELIMITER $$
CREATE PROCEDURE GETESPECIES(PGENERO VARCHAR(50))
BEGIN
	SELECT NOMBRE FROM ESPECIE WHERE GENERO_ID = GETGENERO_X_NOMBRE(PGENERO);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS INSERTARFOTO;
DELIMITER $$
CREATE PROCEDURE INSERTARFOTO(PESTADO_ID INT,PPERSONA_ID INT,PESPECIE_ID INT)
BEGIN
	INSERT INTO foto_ave(FOTO,ESTADO_ID,PERSONA_ID,ESPECIE_ID) VALUES
    ('',PESTADO_ID,PPERSONA_ID,PESPECIE_ID);
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS COLOCARFOTO;
DELIMITER $$
CREATE PROCEDURE COLOCARFOTO(PFOTO VARCHAR(100),PFOTO_AVE_ID INT)
BEGIN
	UPDATE foto_ave
    SET FOTO= PFOTO
    WHERE FOTO_AVE_ID= PFOTO_AVE_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS GETCONTRASENA;
DELIMITER $$
CREATE PROCEDURE GETCONTRASENA(PID INT(8))
BEGIN
	SELECT U.CONTRASENA FROM PERSONA P
    INNER JOIN usuario U ON U.USUARIO_ID = P.USUARIO_ID AND
    P.PERSONA_ID = PID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS ACTUALIZARCONTRASENA;
DELIMITER $$
CREATE PROCEDURE ACTUALIZARCONTRASENA(PCONTRASENA VARCHAR(100),PID INT(8))
BEGIN
	DECLARE PUSUARIO_ID INT(8);
    SELECT U.USUARIO_ID INTO PUSUARIO_ID FROM PERSONA P
    INNER JOIN USUARIO U ON P.USUARIO_ID = U.USUARIO_ID AND P.PERSONA_ID = PID;
	UPDATE USUARIO SET CONTRASENA= PCONTRASENA
    WHERE USUARIO_ID = PUSUARIO_ID;
END;
$$
DELIMITER ;

DROP PROCEDURE IF EXISTS OBTENERBITACORA;
DELIMITER $$
CREATE PROCEDURE OBTENERBITACORA()
BEGIN
	SELECT U.NOMBRE, B.CONTRASENA_NUEVA, B.CONTRASENA_ANT, B.FEC_CREACION FROM  BITACORA B
	INNER JOIN USUARIO U ON U.USUARIO_ID = B.USUARIO_ID
    ORDER BY B.FEC_CREACION DESC;
END;
$$
DELIMITER ;

